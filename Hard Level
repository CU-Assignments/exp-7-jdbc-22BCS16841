import java.sql.*;
import java.util.Scanner;

// ðŸ”¹ Model: Student Class
class Student {
    int studentID;
    String name;
    String department;
    double marks;

    public Student(int studentID, String name, String department, double marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }
}

// ðŸ”¹ Controller: Database Operations
class StudentController {
    private static final String URL = "jdbc:mysql://localhost:3306/ANA";
    private static final String USERNAME = "root"; 
    private static final String PASSWORD = "12345678";

    private Connection connection;

    public StudentController() {
        try {
            connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // ðŸ”¹ Create: Add a Student
    public void addStudent(Student student) {
        try {
            String sql = "INSERT INTO Student (Name, Department, Marks) VALUES (?, ?, ?)";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setString(1, student.name);
            stmt.setString(2, student.department);
            stmt.setDouble(3, student.marks);
            stmt.executeUpdate();
            System.out.println("Student added successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // ðŸ”¹ Read: View Students
    public void viewStudents() {
        try {
            String sql = "SELECT * FROM Student";
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                System.out.println(rs.getInt("StudentID") + " | " +
                        rs.getString("Name") + " | " +
                        rs.getString("Department") + " | " +
                        rs.getDouble("Marks"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // ðŸ”¹ Update: Modify Student Marks
    public void updateStudentMarks(int studentID, double newMarks) {
        try {
            String sql = "UPDATE Student SET Marks = ? WHERE StudentID = ?";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setDouble(1, newMarks);
            stmt.setInt(2, studentID);
            int updated = stmt.executeUpdate();
            if (updated > 0) {
                System.out.println("Marks updated successfully!");
            } else {
                System.out.println("Student not found!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // ðŸ”¹ Delete: Remove a Student
    public void deleteStudent(int studentID) {
        try {
            String sql = "DELETE FROM Student WHERE StudentID = ?";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setInt(1, studentID);
            int deleted = stmt.executeUpdate();
            if (deleted > 0) {
                System.out.println("Student deleted successfully!");
            } else {
                System.out.println("Student not found!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

// ðŸ”¹ View: Menu for User Interaction
public class StudentManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StudentController controller = new StudentController();

        while (true) {
            System.out.println("\n--- Student Management ---");
            System.out.println("1. Add Student");
            System.out.println("2. View Students");
            System.out.println("3. Update Marks");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    scanner.nextLine();  // Clear buffer
                    System.out.print("Enter Name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter Department: ");
                    String department = scanner.nextLine();
                    System.out.print("Enter Marks: ");
                    double marks = scanner.nextDouble();
                    controller.addStudent(new Student(0, name, department, marks));
                    break;
                case 2:
                    controller.viewStudents();
                    break;
                case 3:
                    System.out.print("Enter Student ID to update: ");
                    int studentID = scanner.nextInt();
                    System.out.print("Enter new Marks: ");
                    double newMarks = scanner.nextDouble();
                    controller.updateStudentMarks(studentID, newMarks);
                    break;
                case 4:
                    System.out.print("Enter Student ID to delete: ");
                    int deleteID = scanner.nextInt();
                    controller.deleteStudent(deleteID);
                    break;
                case 5:
                    System.out.println("Exiting... Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice! Try again.");
            }
        }
    }
}       
